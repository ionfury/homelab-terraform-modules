version: "3"

tasks:

  check:
    desc: Checks if the terraform configuration files are formatted and linted.
    cmds:
      - task: fmt-check
      - task: lint-check
      - task: docs-check
      - task: validate

  fix:
    desc: Fixes the formatting of the terraform configuration files.
    cmds:
      - task: fmt
      - task: lint
      - task: docs

  lint:
    internal: true
    desc: Lints the terraform configuration files.
    cmds:
      - tflint --recursive --fix
    preconditions:
      - which tflint

  lint-check:
    internal: true
    desc: Checks if the terraform configuration files are linted.
    cmds:
      - tflint --recursive
    preconditions:
      - which tflint

  fmt:
    internal: true
    desc: Formats the terraform configuration files.
    cmds:
      - terraform fmt -recursive
    preconditions:
      - which terraform

  fmt-check:
    internal: true
    desc: Checks if the terraform configuration files are formatted.
    cmds:
      - terraform fmt -recursive -check
    preconditions:
      - which terraform
  
  docs-check:
    internal: true
    desc: Checks if the terraform configuration files are documented.
    cmds:
      - find {{ .MODULES_DIR }} -type d -maxdepth 1 -mindepth 1 -exec sh -c 'cd "{}" && terraform-docs markdown --output-file README.md --output-check .' \;
    preconditions:
      - which terraform-docs
      
  docs:
    internal: true
    desc: Generates docs for all terraform modules.
    cmds: 
      - find {{ .MODULES_DIR }} -type d -maxdepth 1 -mindepth 1 -exec sh -c 'cd "{}" && terraform-docs markdown --output-file README.md .' \;
    preconditions:
      - which terraform-docs
    generates:
      - '{{ .MODULES_DIR }}/*/README.md'

  validate:
    internal: true
    desc: Validates the terraform configuration files.
    cmds:
      - find {{ .MODULES_DIR }} -type d -maxdepth 1 -mindepth 1  -exec sh -c 'cd "{}" && terraform init --backend=false && terraform validate' \;
    preconditions:
      - which terraform
